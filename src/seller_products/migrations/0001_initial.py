# Generated by Django 3.2.7 on 2021-09-14 11:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product_data_types', '0001_initial'),
        ('data_delivery_types', '0001_initial'),
        ('sellers', '0001_initial'),
        ('geo_regions', '0001_initial'),
        ('categories', '0004_auto_20210905_1349'),
    ]

    operations = [
        migrations.CreateModel(
            name='SellerProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Name')),
                ('descr', models.TextField(blank=True, default='', verbose_name='Description')),
                ('price_per_one_time', models.FloatField(blank=True, default=None, null=True, verbose_name='Price per one time usage')),
                ('price_per_month', models.FloatField(blank=True, default=None, null=True, verbose_name='Price per month')),
                ('price_per_year', models.FloatField(blank=True, default=None, null=True, verbose_name='Price per year')),
                ('price_by_request', models.FloatField(blank=True, default=None, null=True, verbose_name='Price by request')),
                ('price_per_usage', models.BooleanField(blank=True, default=None, null=True, verbose_name='Price per usage True/False')),
                ('price_per_usage_descr', models.TextField(blank=True, default=None, null=True, verbose_name='Purhcase method description')),
                ('rating', models.FloatField(blank=True, default=None, null=True, verbose_name='Rating')),
                ('total_reviews_cnt', models.IntegerField(default=0, verbose_name='Total count of reviews')),
                ('version', models.IntegerField(default=1, verbose_name='Version')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('categories', models.ManyToManyField(blank=True, db_table='seller_product_categories', to='categories.Category', verbose_name='Content categories')),
                ('data_delivery_types', models.ManyToManyField(blank=True, db_table='seller_product_data_delivery_types', to='data_delivery_types.DataDeliveryType', verbose_name='Content data types')),
                ('data_formats', models.ManyToManyField(blank=True, db_table='seller_product_data_formats', to='product_data_types.DataFormat', verbose_name='Content data formats')),
                ('data_types', models.ManyToManyField(blank=True, db_table='seller_product_data_types', to='product_data_types.DataType', verbose_name='Content data types')),
                ('geo_regions', models.ManyToManyField(blank=True, db_table='seller_product_geo_regions', to='geo_regions.GeoRegion', verbose_name='Content geo regions')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sellers.seller')),
            ],
            options={
                'db_table': 'seller_products',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SellerProductArchive',
            fields=[
                ('name', models.CharField(max_length=500, verbose_name='Name')),
                ('descr', models.TextField(blank=True, default='', verbose_name='Description')),
                ('price_per_one_time', models.FloatField(blank=True, default=None, null=True, verbose_name='Price per one time usage')),
                ('price_per_month', models.FloatField(blank=True, default=None, null=True, verbose_name='Price per month')),
                ('price_per_year', models.FloatField(blank=True, default=None, null=True, verbose_name='Price per year')),
                ('price_by_request', models.FloatField(blank=True, default=None, null=True, verbose_name='Price by request')),
                ('price_per_usage', models.BooleanField(blank=True, default=None, null=True, verbose_name='Price per usage True/False')),
                ('price_per_usage_descr', models.TextField(blank=True, default=None, null=True, verbose_name='Purhcase method description')),
                ('rating', models.FloatField(blank=True, default=None, null=True, verbose_name='Rating')),
                ('total_reviews_cnt', models.IntegerField(default=0, verbose_name='Total count of reviews')),
                ('version', models.IntegerField(default=1, verbose_name='Version')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('seller_product_id', models.IntegerField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('categories', models.ManyToManyField(blank=True, db_table='seller_product_categories_archive', to='categories.Category', verbose_name='Content categories')),
                ('data_delivery_types', models.ManyToManyField(blank=True, db_table='seller_product_data_delivery_types_archive', to='data_delivery_types.DataDeliveryType', verbose_name='Content data types')),
                ('data_formats', models.ManyToManyField(blank=True, db_table='seller_product_data_formats_archive', to='product_data_types.DataFormat', verbose_name='Content data formats')),
                ('data_types', models.ManyToManyField(blank=True, db_table='seller_product_data_types_archive', to='product_data_types.DataType', verbose_name='Content data types')),
                ('geo_regions', models.ManyToManyField(blank=True, db_table='seller_product_geo_regions_archive', to='geo_regions.GeoRegion', verbose_name='Content geo-regions')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sellers.seller')),
            ],
            options={
                'db_table': 'seller_products_archive',
                'abstract': False,
                'unique_together': {('seller_product_id', 'version')},
            },
        ),
        migrations.CreateModel(
            name='SellerProductDataUrlArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL')),
                ('data_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_data_types.dataformat')),
                ('data_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_data_types.datatype')),
                ('seller_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_urls_archive', to='seller_products.sellerproductarchive')),
            ],
            options={
                'verbose_name': 'Data url archive',
                'verbose_name_plural': 'Data urls archive',
                'db_table': 'seller_product_data_urls_archive',
            },
        ),
        migrations.CreateModel(
            name='SellerProductDataUrl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL')),
                ('data_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_data_types.dataformat')),
                ('data_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_data_types.datatype')),
                ('seller_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_urls', to='seller_products.sellerproduct')),
            ],
            options={
                'verbose_name': 'Data url',
                'verbose_name_plural': 'Data urls',
                'db_table': 'seller_product_data_urls',
            },
        ),
        migrations.CreateModel(
            name='SellerProductDataSampleArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL')),
                ('data_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_data_types.dataformat')),
                ('data_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_data_types.datatype')),
                ('seller_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_samples_archive', to='seller_products.sellerproductarchive')),
            ],
            options={
                'verbose_name': 'Data sample archive',
                'verbose_name_plural': 'Data samples archive',
                'db_table': 'seller_product_data_samples_archive',
            },
        ),
        migrations.CreateModel(
            name='SellerProductDataSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL')),
                ('data_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_data_types.dataformat')),
                ('data_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_data_types.datatype')),
                ('seller_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_samples', to='seller_products.sellerproduct')),
            ],
            options={
                'verbose_name': 'Data sample',
                'verbose_name_plural': 'Data samples',
                'db_table': 'seller_product_data_samples',
            },
        ),
    ]
